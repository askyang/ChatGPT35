import { useEffect, useRef } from "react";

import styles from "./home.module.scss";

import { IconButton } from "./button";
import SettingsIcon from "../icons/settings.svg";
import GithubIcon from "../icons/github.svg";
import ChatGptIcon from "../icons/chatgpt.svg";
import AddIcon from "../icons/add.svg";
import CloseIcon from "../icons/close.svg";
import MaskIcon from "../icons/mask.svg";
import PluginIcon from "../icons/plugin.svg";

import Locale from "../locales";

import { useAppConfig, useChatStore } from "../store";

import {
  MAX_SIDEBAR_WIDTH,
  MIN_SIDEBAR_WIDTH,
  NARROW_SIDEBAR_WIDTH,
  Path,
  REPO_URL,
} from "../constant";

import { Link, useNavigate } from "react-router-dom";
import { useMobileScreen } from "../utils";
import dynamic from "next/dynamic";
import { showToast } from "./ui-lib";

const ChatList = dynamic(async () => (await import("./chat-list")).ChatList, {
  loading: () => null,
});

function useHotKey() {
  const chatStore = useChatStore();

  useEffect(() => {
    const onKeyDown = (e: KeyboardEvent) => {
      if (e.metaKey || e.altKey || e.ctrlKey) {
        const n = chatStore.sessions.length;
        const limit = (x: number) => (x + n) % n;
        const i = chatStore.currentSessionIndex;
        if (e.key === "ArrowUp") {
          chatStore.selectSession(limit(i - 1));
        } else if (e.key === "ArrowDown") {
          chatStore.selectSession(limit(i + 1));
        }
      }
    };

    window.addEventListener("keydown", onKeyDown);
    return () => window.removeEventListener("keydown", onKeyDown);
  });
}

function useDragSideBar() {
  const limit = (x: number) => Math.min(MAX_SIDEBAR_WIDTH, x);

  const config = useAppConfig();
  const startX = useRef(0);
  const startDragWidth = useRef(config.sidebarWidth ?? 300);
  const lastUpdateTime = useRef(Date.now());

  const handleMouseMove = useRef((e: MouseEvent) => {
    if (Date.now() < lastUpdateTime.current + 50) {
      return;
    }
    lastUpdateTime.current = Date.now();
    const d = e.clientX - startX.current;
    const nextWidth = limit(startDragWidth.current + d);
    config.update((config) => (config.sidebarWidth = nextWidth));
  });

  const handleMouseUp = useRef(() => {
    startDragWidth.current = config.sidebarWidth ?? 300;
    window.removeEventListener("mousemove", handleMouseMove.current);
    window.removeEventListener("mouseup", handleMouseUp.current);
  });

  const onDragMouseDown = (e: MouseEvent) => {
    startX.current = e.clientX;

    window.addEventListener("mousemove", handleMouseMove.current);
    window.addEventListener("mouseup", handleMouseUp.current);
  };
  const isMobileScreen = useMobileScreen();
  const shouldNarrow =
    !isMobileScreen && config.sidebarWidth < MIN_SIDEBAR_WIDTH;

  useEffect(() => {
    const barWidth = shouldNarrow
      ? NARROW_SIDEBAR_WIDTH
      : limit(config.sidebarWidth ?? 300);
    const sideBarWidth = isMobileScreen ? "100vw" : `${barWidth}px`;
    document.documentElement.style.setProperty("--sidebar-width", sideBarWidth);
  }, [config.sidebarWidth, isMobileScreen, shouldNarrow]);

  return {
    onDragMouseDown,
    shouldNarrow,
  };
}

export function SideBar(props: { className?: string }) {
  const chatStore = useChatStore();

  // drag side bar
  const { onDragMouseDown, shouldNarrow } = useDragSideBar();
  const navigate = useNavigate();
  const config = useAppConfig();

  useHotKey();

  return (
    <div
      className={`${styles.sidebar} ${props.className} ${
        shouldNarrow && styles["narrow-sidebar"]
      }`}
    >

        <div className={styles["sidebar-header"]}>
        <svg width="100%" height="100%" viewBox="0 0 261 61" fill="none" xmlns="http://www.w3.org/2000/svg">
<g filter="url(#filter0_d_1362_6701)">
<rect x="4" width="253" height="53" rx="8" fill="white"/>
</g>
<path d="M22.418 12.2891H17V17.7842H22.418V12.2891Z" fill="#6DDCFF"/>
<path d="M22.2774 40.9216V21.1103H17.1445V40.777H22.2774V40.9216ZM56.2111 41.0662V36.2941C55.4982 36.2941 54.7853 36.2941 54.3575 36.1495C53.7872 36.0049 53.3595 35.8603 53.2169 35.5711C52.9317 35.2819 52.7892 34.848 52.6466 34.4142C52.504 33.9804 52.504 33.2574 52.504 32.5343V25.5931H56.2111V21.1103H52.504V13.4461H47.3712V32.5343C47.3712 34.125 47.5138 35.5711 47.7989 36.5833C48.0841 37.5956 48.5118 38.6078 49.2247 39.1863C49.795 39.9093 50.6505 40.3431 51.7911 40.6323C52.7892 40.9216 54.0724 41.0662 55.6407 41.0662H56.2111ZM85.5822 40.9216V12H80.4494V40.9216H85.5822ZM42.5235 23.1348C41.0977 21.5441 39.1016 20.8211 36.5352 20.8211C35.252 20.8211 34.1114 21.1103 33.1133 21.5441C32.1153 21.9779 31.2598 22.701 30.5469 23.7132L30.2618 24.1471V23.8578V21.3995H25.2715V41.0662H30.4043V30.5098V31.2328C30.4043 31.0882 30.4043 30.9436 30.4043 30.9436C30.4043 29.0637 30.9747 27.7623 31.6875 26.8946C32.543 26.027 33.6836 25.4485 34.9668 25.4485C36.3926 25.4485 37.5333 25.8824 38.3887 26.75C39.1016 27.6176 39.5294 28.9191 39.5294 30.5098V40.9216H44.6622V29.7868C44.6622 26.8946 43.9493 24.5809 42.5235 23.1348ZM77.7404 30.9436C77.7404 29.4975 77.4553 28.1961 77.0275 26.8946C76.5998 25.5931 75.8869 24.5809 75.0314 23.5686C74.1759 22.701 73.0353 21.8333 71.8947 21.3995C70.6115 20.9657 69.1857 20.6765 67.7599 20.6765C66.3341 20.6765 65.0509 20.9657 63.7677 21.5441C62.4845 22.1225 61.4865 22.8456 60.4884 23.7132C59.6329 24.5809 58.92 25.7377 58.3497 27.0392C57.7794 28.3407 57.4943 29.6422 57.4943 31.0882C57.4943 32.5343 57.7794 33.8358 58.2072 35.1373C58.7775 36.4387 59.3478 37.451 60.3458 38.4632C61.2013 39.3309 62.3419 40.0539 63.6251 40.6323C64.9083 41.2108 66.3341 41.5 67.7599 41.5C72.0373 41.5 74.7463 39.4755 76.4572 37.5956L72.7502 34.7034C72.0373 35.5711 70.1837 36.8725 67.7599 36.8725C66.3341 36.8725 65.1935 36.5833 64.1955 35.8603C63.34 35.1373 62.6271 34.2696 62.3419 33.1127V32.9681H77.7404V30.9436ZM62.6271 29.2083C62.6271 27.7623 64.1955 25.3039 67.7599 25.3039C71.3244 25.3039 72.8927 27.7623 72.8927 29.2083H62.6271Z" fill="#0071C5"/>
<path d="M91.4238 38.3229C91.2813 38.0337 91.1387 37.8891 90.9961 37.7444C90.8535 37.5998 90.5684 37.4552 90.4258 37.3106C90.1406 37.166 89.9981 37.166 89.7129 37.166C89.4277 37.166 89.1426 37.166 89 37.3106C88.7149 37.4552 88.5723 37.5998 88.4297 37.7444C88.2871 37.8891 88.1445 38.1783 88.002 38.3229C87.8594 38.6121 87.8594 38.7567 87.8594 39.0459C87.8594 39.3351 87.8594 39.6243 88.002 39.769C88.1445 40.0582 88.2871 40.2028 88.4297 40.3474C88.5723 40.492 88.8574 40.6366 89 40.7812C89.2852 40.9258 89.4277 40.9258 89.7129 40.9258C89.9981 40.9258 90.2832 40.9258 90.4258 40.7812C90.711 40.6366 90.8535 40.492 90.9961 40.3474C91.1387 40.2028 91.2813 39.9136 91.4238 39.769C91.5664 39.4797 91.5664 39.3351 91.5664 39.0459C91.5664 38.9013 91.5664 38.6121 91.4238 38.3229ZM91.1387 39.769C90.9961 39.9136 90.9961 40.0582 90.8535 40.2028C90.7109 40.3474 90.5684 40.492 90.4258 40.492C90.2832 40.6366 89.9981 40.6366 89.8555 40.6366C89.5703 40.6366 89.4277 40.6366 89.2852 40.492C89.1426 40.3474 89 40.3474 88.8574 40.2028C88.7148 40.0582 88.5723 39.9136 88.5723 39.769C88.4297 39.6243 88.4297 39.3351 88.4297 39.1905C88.4297 39.0459 88.4297 38.7567 88.5723 38.6121C88.7148 38.4675 88.7148 38.3229 88.8574 38.1783C89 38.0337 89.1426 37.8891 89.2852 37.8891C89.4277 37.7444 89.7129 37.7444 89.8555 37.7444C90.1406 37.7444 90.2832 37.7444 90.4258 37.8891C90.5684 38.0337 90.7109 38.0337 90.8535 38.1783C90.9961 38.3229 91.1387 38.4675 91.1387 38.6121C91.2813 38.7567 91.2813 39.0459 91.2813 39.1905C91.2813 39.3351 91.1387 39.4797 91.1387 39.769ZM89.9981 39.3351C90.1406 39.3351 90.2832 39.1905 90.4258 39.1905C90.5684 39.0459 90.5684 38.9013 90.5684 38.7567C90.5684 38.6121 90.5684 38.3229 90.4258 38.3229C90.2832 38.1783 90.1406 38.1783 89.8555 38.1783H89V40.2028H89.4277V39.3351H89.7129L90.2832 40.2028H90.5684L89.9981 39.3351ZM89.8555 38.9013H89.7129H89.4277V38.3229H89.7129H89.8555H89.9981C89.9981 38.3229 90.1406 38.3229 90.1406 38.4675V38.6121V38.7567C90.1406 38.7567 90.1406 38.9013 89.9981 38.9013C89.9981 38.9013 89.8555 38.9013 89.8555 38.9013Z" fill="#0071C5"/>
<path d="M115.177 33.5942V20.4238H117.412V33.5942H115.177ZM109.709 28.1265V25.8915H122.879V28.1265H109.709Z" fill="#004098"/>
<path d="M171.899 18.128L170.778 17.1308L170.783 17.1256L170.675 17.028C168.758 15.3162 165.643 15.3162 163.725 17.028L155.963 23.9572C154.046 25.669 154.046 28.4499 155.963 30.1617L156.066 30.2542L163.355 23.7465L163.366 23.7516L166.054 21.351L166.326 21.1094C166.805 20.6828 167.586 20.6828 168.064 21.1094L168.316 21.3356H168.321L168.388 21.3973C168.491 21.4641 168.619 21.5052 168.758 21.5052C168.902 21.5052 169.035 21.459 169.143 21.387L171.965 18.8682C172.048 18.7757 172.094 18.6575 172.094 18.5341C172.089 18.3696 172.017 18.2308 171.899 18.128Z" fill="#004098"/>
<path d="M185.866 18.1743L184.699 17.1308L184.704 17.1256L184.591 17.028C182.674 15.3162 179.559 15.3162 177.641 17.028L169.879 23.9572C167.962 25.669 167.962 28.4499 169.879 30.1617L169.998 30.2645L174.511 26.2344C174.531 26.2138 174.547 26.1881 174.573 26.1676L179.97 21.3459L180.242 21.1043C180.721 20.6776 181.502 20.6776 181.98 21.1043L182.232 21.3305L182.304 21.3922C182.407 21.459 182.53 21.5001 182.669 21.5001C182.813 21.5001 182.946 21.4538 183.049 21.3819L185.887 18.8477C185.959 18.7551 186.005 18.6472 186.005 18.5238C186.01 18.3902 185.953 18.2668 185.866 18.1743Z" fill="#004098"/>
<path d="M192.341 23.9572L192.227 23.8595L191.019 22.7801C190.917 22.7132 190.793 22.6721 190.655 22.6721C190.511 22.6721 190.377 22.7184 190.269 22.7955L187.421 25.34C187.349 25.4325 187.308 25.5405 187.308 25.6587C187.308 25.7718 187.349 25.8797 187.411 25.9671L187.776 26.2961C188.244 26.7227 188.244 27.4064 187.771 27.8331L182.085 32.9118C181.607 33.3384 180.826 33.3384 180.348 32.9118L177.855 30.686L178.431 30.172C180.348 28.4602 180.348 25.6792 178.431 23.9675L178.323 23.8698L168.191 32.9169C167.713 33.3436 166.932 33.3436 166.454 32.9169L163.95 30.6809L164.521 30.172C166.438 28.4602 166.438 25.6792 164.521 23.9675L164.408 23.8698L154.276 32.9169C153.798 33.3436 153.017 33.3436 152.538 32.9169L146.745 27.7251C146.267 27.2985 146.267 26.6045 146.745 26.1727L152.148 21.351L152.42 21.1094C152.898 20.6828 153.68 20.6828 154.158 21.1094L154.41 21.3356L154.471 21.3922C154.574 21.4641 154.703 21.5052 154.846 21.5052C155.001 21.5052 155.139 21.4538 155.247 21.3767L158.075 18.8477C158.147 18.7551 158.188 18.6472 158.188 18.529C158.188 18.3953 158.136 18.2771 158.049 18.1845L156.872 17.1308L156.877 17.1256L156.769 17.028C154.852 15.3162 151.737 15.3162 149.819 17.028C149.819 17.028 149.819 17.028 142.057 23.9572C140.14 25.669 140.14 28.4499 142.057 30.1617L149.819 37.0909C151.737 38.8027 154.852 38.8027 156.769 37.0909L160.254 33.981L163.739 37.0909C165.657 38.8027 168.772 38.8027 170.689 37.0909L174.164 33.9861L177.639 37.0909C179.556 38.8027 182.671 38.8027 184.589 37.0909L192.351 30.1617C194.263 28.4499 194.263 25.669 192.341 23.9572Z" fill="#004098"/>
<path d="M206.216 27.9512V33.7479C206.178 34.5572 205.948 35.1971 205.522 35.6619C205.095 36.1267 204.499 36.3783 203.723 36.4166C203.143 36.4166 202.662 36.3564 202.273 36.2416C201.885 36.1267 201.557 35.9135 201.289 35.6017C200.977 35.2955 200.786 34.9455 200.709 34.5572C200.633 34.169 200.611 33.726 200.649 33.2229V27.9512H201.579V33.2831C201.541 33.6713 201.541 34.0159 201.579 34.3276C201.617 34.6393 201.754 34.9455 201.984 35.2572C202.175 35.4869 202.41 35.6838 202.678 35.8369C202.99 35.9517 203.334 36.0283 203.723 36.0666C204.379 36.0666 204.86 35.8533 205.172 35.4267C205.522 35.0002 205.691 34.3658 205.691 33.5127V27.9512H206.216Z" fill="black"/>
<path d="M207.492 29.1105V36.2361H206.973V27.9512H207.782L212.655 34.3221V27.9512H213.119V36.4111L207.492 29.1105Z" fill="black"/>
<path d="M214.838 27.9512H213.908V36.2416H214.838V27.9512Z" fill="black"/>
<path d="M220.474 32.1237L218.856 36.4111L215.607 27.9512H216.537L219.085 34.6174L220.245 31.4839L218.971 27.9512H219.895L222.334 34.6174L224.882 27.9512H225.402L222.099 36.4111L220.474 32.1237Z" fill="black"/>
<path d="M227.084 27.9512H226.154V36.2416H227.084V27.9512Z" fill="black"/>
<path d="M227.873 35.1965L228.278 34.9668C228.431 35.3168 228.666 35.5847 228.972 35.7761C229.284 35.9675 229.628 36.0824 230.017 36.1261C230.443 36.0879 230.81 35.9129 231.116 35.6066C231.384 35.3004 231.542 34.852 231.581 34.2723C231.581 33.8075 231.466 33.4411 231.231 33.1731C231.001 32.8997 230.673 32.6919 230.246 32.5333L229.727 32.3036C229.109 32.0356 228.644 31.7458 228.338 31.4341C228.026 31.0841 227.873 30.663 227.873 30.1599C227.873 29.4654 228.103 28.8857 228.568 28.4209C229.032 27.9943 229.612 27.7811 230.307 27.7811C230.695 27.7428 231.039 27.8193 231.351 28.0107C231.657 28.2021 231.931 28.5138 232.16 28.9404L231.81 29.1701C231.657 28.7818 231.444 28.5138 231.171 28.3607C230.897 28.1693 230.651 28.0709 230.416 28.0709C229.913 28.0709 229.508 28.224 229.196 28.5357C228.885 28.8474 228.732 29.2521 228.732 29.7552C228.732 30.2201 228.846 30.5864 229.082 30.8544C229.311 31.1224 229.678 31.3575 230.181 31.5489L230.7 31.7239C231.28 31.9536 231.707 32.227 231.974 32.5333C232.281 32.8833 232.439 33.3262 232.439 33.8676C232.401 34.6387 232.149 35.2566 231.685 35.7215C231.258 36.148 230.678 36.3777 229.946 36.416C229.443 36.416 229.016 36.3175 228.671 36.1261C228.332 35.9347 228.064 35.623 227.873 35.1965Z" fill="black"/>
<path d="M234.157 35.8314H238.045V36.2361H233.232V27.9512H237.924V28.3558H234.157V31.7737H237.755V32.1784H234.157V35.8314Z" fill="black"/>
<path d="M239.748 35.8314H243.631V36.2361H238.818V27.9512H243.516V28.3558H239.748V31.7737H243.341V32.1784H239.748V35.8314Z" fill="black"/>
<path d="M210.376 17.6598L209.714 19.8472H208.237L208.888 17.7035L210.376 17.6598ZM207.127 17.698L207.74 19.8417H206.208L205.585 17.6543L207.127 17.698ZM208.336 23.5987L209.276 23.3854L210.6 26.4533H208.833L207.942 24.3697L206.93 26.4533H205.164L206.854 22.9588H205.503V21.9417H207.089L207.001 20.8589H205.503V19.8417H210.403V20.8589H208.724L208.801 21.9417H210.408V22.9588H208.636L208.336 23.5987ZM202.534 24.3424L203.332 24.244V23.1174H202.534V24.3424ZM203.337 22.9042V20.8917H202.539V22.1167H203.108L203.337 22.9042ZM203.337 20.7058V18.7152H202.539V19.9074H203.108L203.337 20.7058ZM200.959 24.5119V18.7152H200.521V17.6652L205.016 17.6543L205.186 18.7152H204.918V24.0744L205.186 24.0526L205.126 25.0861L204.918 25.1135V26.4642H203.332V25.2775L200.516 25.5783V24.5611L200.959 24.5119Z" fill="black"/>
<path d="M219.305 23.5166H213.683V25.0588H219.305V23.5166ZM211.9 22.5214H213.71L213.683 23.4619L214.181 22.5214H220.645L221.099 23.451V26.1689L211.9 26.1525V22.5214ZM221.279 20.848V21.8487H211.72V20.848H221.279ZM214.771 17.6598L214.017 18.6277L212.775 20.2081H211.627L213.585 17.6543H219.392L221.367 20.2027L220.224 20.2081L219.004 18.5785L214.58 18.6113" fill="black"/>
<path d="M227.513 18.0512V17.6629L229.214 17.5098V18.0512H232.326V19.0957H229.214V20.1839H232.052L232.058 21.2065L229.214 21.212V22.3659H231.461L232.293 23.4049L232.298 25.4392L231.522 26.2486H229.799L230.586 25.215L230.597 23.4432H229.214V25.8658L227.513 26.5056V23.4432H225.326L225.495 22.3604H227.508V21.2065H225.67L225.665 20.1784H227.508V19.0902H225.419V18.0457H227.513V18.0512ZM223.685 17.6629H225.501L224.998 19.0574V26.4619H223.291V20.8347H222.449L223.685 17.6629Z" fill="black"/>
<path d="M241.081 19.8527H238.292V23.4018L241.086 23.4073L241.081 19.8527ZM235.705 17.9113V18.7261H236.596V17.627H238.292V18.7261H241.081V17.627H242.781V18.7261H243.585V19.8472H242.781L242.792 23.287L241.086 24.5119H236.596V19.8472H235.705V25.1682L243.35 25.1736L243.585 26.2947L233.993 26.3002L234.004 19.8472H233.786L233.654 18.7261H234.004V17.9605L235.705 17.9113Z" fill="black"/>
<defs>
<filter id="filter0_d_1362_6701" x="0" y="0" width="261" height="61" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
<feFlood flood-opacity="0" result="BackgroundImageFix"/>
<feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"/>
<feOffset dy="4"/>
<feGaussianBlur stdDeviation="2"/>
<feComposite in2="hardAlpha" operator="out"/>
<feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.05 0"/>
<feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_1362_6701"/>
<feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow_1362_6701" result="shape"/>
</filter>
</defs>
</svg>
      </div>
      <div className={styles["sidebar-header"]}>
        <div className={styles["sidebar-title"]}>ChatGPT AI助手</div>
        <div className={styles["sidebar-sub-title"]}>
          构建自己的人工智能助手.
        </div>
        <div className={styles["sidebar-logo"] + " no-dark"}>
          <ChatGptIcon />
        </div>
      </div>

      <div className={styles["sidebar-header-bar"]}>
        <IconButton
          icon={<MaskIcon />}
          text={shouldNarrow ? undefined : Locale.Mask.Name}
          className={styles["sidebar-bar-button"]}
          onClick={() => navigate(Path.NewChat, { state: { fromHome: true } })}
          shadow
        />
        <IconButton
          icon={<PluginIcon />}
          text={shouldNarrow ? undefined : Locale.Plugin.Name}
          className={styles["sidebar-bar-button"]}
          onClick={() => showToast(Locale.WIP)}
          shadow
        />
      </div>

      <div
        className={styles["sidebar-body"]}
        onClick={(e) => {
          if (e.target === e.currentTarget) {
            navigate(Path.Home);
          }
        }}
      >
        <ChatList narrow={shouldNarrow} />
      </div>

      <div className={styles["sidebar-tail"]}>
        <div className={styles["sidebar-actions"]}>
          <div className={styles["sidebar-action"] + " " + styles.mobile}>
            <IconButton
              icon={<CloseIcon />}
              onClick={() => {
                if (confirm(Locale.Home.DeleteChat)) {
                  chatStore.deleteSession(chatStore.currentSessionIndex);
                }
              }}
            />
          </div>
          <div className={styles["sidebar-action"]}>
            <Link to={Path.Settings}>
              <IconButton icon={<SettingsIcon />} shadow />
            </Link>
          </div>
          <div className={styles["sidebar-action"]}>
            <a href={REPO_URL} target="_blank">
              <IconButton icon={<GithubIcon />} shadow />
            </a>
          </div>
        </div>
        <div>
          <IconButton
            icon={<AddIcon />}
            text={shouldNarrow ? undefined : Locale.Home.NewChat}
            onClick={() => {
              if (config.dontShowMaskSplashScreen) {
                chatStore.newSession();
                navigate(Path.Chat);
              } else {
                navigate(Path.NewChat);
              }
            }}
            shadow
          />
        </div>
      </div>

      <div
        className={styles["sidebar-drag"]}
        onMouseDown={(e) => onDragMouseDown(e as any)}
      ></div>
    </div>
  );
}
